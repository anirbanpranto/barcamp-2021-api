swagger: '2.0'
info:
  version: '1.0'
  title: Barcamp 2021 API
  description: Backend API for Bar Camp Cyberjaya 2021 Registration and Voting app.
  contact: {}
host: DefaultParameterValue
basePath: /
securityDefinitions: {}
schemes: []
consumes:
- application/json
produces:
- application/json
paths:
  /auth/check:
    get:
      description: ''
      summary: Check Auth
      tags:
      - Auth
      operationId: CheckAuth
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: object
          headers: {}
  /auth:
    post:
      description: ''
      summary: Login
      tags:
      - Auth
      operationId: Login
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/LoginRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        '200':
          description: ''
          schema:
            type: object
          headers: {}
  /users/gmoSUrSXD:
    get:
      description: ''
      summary: Get single user
      tags:
      - Users
      operationId: Getsingleuser
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: object
          headers: {}
  /users/:
    get:
      description: ''
      summary: Get all users
      tags:
      - Users
      operationId: Getallusers
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: object
          headers: {}
  /users/RHwXNZQpG:
    patch:
      description: ''
      summary: Patch single user
      tags:
      - Users
      operationId: Patchsingleuser
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/PatchsingleuserRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        '200':
          description: ''
          schema:
            type: object
          headers: {}
  /users:
    post:
      description: ''
      summary: Create single user
      tags:
      - Users
      operationId: Createsingleuser
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/CreatesingleuserRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        '200':
          description: ''
          schema:
            type: object
          headers: {}
  /topicsByUser/YbnviMIhh:
    get:
      description: ''
      summary: Get by user
      tags:
      - Topics
      operationId: Getbyuser
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: object
          headers: {}
  /topics:
    get:
      description: ''
      summary: Get all topics
      tags:
      - Topics
      operationId: Getalltopics
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: object
          headers: {}
    post:
      description: ''
      summary: Create single topic
      tags:
      - Topics
      operationId: Createsingletopic
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/CreatesingletopicRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        '200':
          description: ''
          schema:
            type: object
          headers: {}
  /votes/YbnviMIhh:
    get:
      description: ''
      summary: Get by user
      tags:
      - Votes
      operationId: Getbyuser1
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: object
          headers: {}
  /votes:
    get:
      description: ''
      summary: Get all votes
      tags:
      - Votes
      operationId: Getallvotes
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: object
          headers: {}
    post:
      description: ''
      summary: Create multiple votes
      tags:
      - Votes
      operationId: Createmultiplevotes
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/CreatemultiplevotesRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        '200':
          description: ''
          schema:
            type: object
          headers: {}
definitions:
  LoginRequest:
    title: LoginRequest
    example:
      googleId: eyJhbGciOiJSUzI1NiIsImtpZCI6Ijk5MWIwNjM2YWFkYTM0MWM1YTA4ZTBkOGYyNDA2OTcyMDY0ZGM4ZWQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJhY2NvdW50cy5nb29nbGUuY29tIiwiYXpwIjoiMjk1MDExNzA0ODUyLTluOTZxOXRuMHI4am1ybWRvaDBsdHJrdTRzcW05b2JqLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwiYXVkIjoiMjk1MDExNzA0ODUyLTluOTZxOXRuMHI4am1ybWRvaDBsdHJrdTRzcW05b2JqLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwic3ViIjoiMTA1ODIxMjQ3ODMxOTQyMjI1MDM1IiwiZW1haWwiOiJzaGFvbm1ha0BnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiYXRfaGFzaCI6IlF2Um03MWNuZlp6RjVFYmRXMHI3Q1EiLCJuYW1lIjoiU2hhdW4gTWFrIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hLS9BT2gxNEdocEhHaHRFUDFUY3NDTWRsTkduNGVGeVdvemk3RUdwTjBuYlNWZ053PXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6IlNoYXVuIiwiZmFtaWx5X25hbWUiOiJNYWsiLCJsb2NhbGUiOiJlbiIsImlhdCI6MTYzMTI5MjM4MCwiZXhwIjoxNjMxMjk1OTgwLCJqdGkiOiJlOTFmMDhmZmRlYTE5YmQzYjAxYzFkZDI2NzA0NzliNmQ4NDVhOTZiIn0.IcYsaCZOVbnLD2wYt25yrRqDizFAASkFdS_QPjC-s4ha00dnByat05zQmDl62_ekZhEQdtz8jtP3nL2HbM1dMGjzh4sA-APfuDMPUXd3Ry0C3nIQ2NVC0DqpJicgBkWQwhgo1zbkvDsP-OZJq0YGioPjGqY8bsls9kvhZCQPhW0LBmmUWwG6kRQurgn1wihMEURc_3OG6RgkhC4Vf16d9kReqPKZuaVCzv_N2HZWxt0a1828HobVDTjmmFNPk3D5zxeuj81CcJhqXTEhpux5Zx-at6L-oFZ7tMDZhE_GIrS22IK6Wzj22qcUV6_ghUGEkFilbRjrxex7rhZjgqhZ_Q
    type: object
    properties:
      googleId:
        type: string
    required:
    - googleId
  PatchsingleuserRequest:
    title: PatchsingleuserRequest
    example:
      fullName: Mak Yen Wei
      age: 12
      contactNumber: '123456'
      companyOrInstitution: ''
    type: object
    properties:
      fullName:
        type: string
      age:
        type: integer
        format: int32
      contactNumber:
        type: string
      companyOrInstitution:
        type: string
    required:
    - fullName
    - age
    - contactNumber
    - companyOrInstitution
  CreatesingleuserRequest:
    title: CreatesingleuserRequest
    example:
      googleId: eyJhbGciOiJSUzI1NiIsImtpZCI6Ijk5MWIwNjM2YWFkYTM0MWM1YTA4ZTBkOGYyNDA2OTcyMDY0ZGM4ZWQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJhY2NvdW50cy5nb29nbGUuY29tIiwiYXpwIjoiMjk1MDExNzA0ODUyLTluOTZxOXRuMHI4am1ybWRvaDBsdHJrdTRzcW05b2JqLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwiYXVkIjoiMjk1MDExNzA0ODUyLTluOTZxOXRuMHI4am1ybWRvaDBsdHJrdTRzcW05b2JqLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwic3ViIjoiMTA1ODIxMjQ3ODMxOTQyMjI1MDM1IiwiZW1haWwiOiJzaGFvbm1ha0BnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiYXRfaGFzaCI6IktPQWQ4UnlHaW84cERaZUpPUHVaYkEiLCJuYW1lIjoiU2hhdW4gTWFrIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hLS9BT2gxNEdocEhHaHRFUDFUY3NDTWRsTkduNGVGeVdvemk3RUdwTjBuYlNWZ053PXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6IlNoYXVuIiwiZmFtaWx5X25hbWUiOiJNYWsiLCJsb2NhbGUiOiJlbiIsImlhdCI6MTYzMTI0NTI4MywiZXhwIjoxNjMxMjQ4ODgzLCJqdGkiOiI0YmIxMjk5YmNmMTkzNzM3NGFkNmYwODFjZDhmNWE4Y2FkMTIwODQ1In0.Cg8W8gfHM-BG9z7iou0aFNmLXG0VmmS2EYIKoG8pftwhCRY8iBHCnrV5No4pgBeRcx16tFLjLKRnW5CHO_reNDDVru-kQiayzMe7odz-1QSkm5-gJT2iJ-j1mJjWPaGhM0oD6qyUFdjm6HuNmZPDUasw48MHASJMhfB2kqnXRntlV6m6V2mIIaN34odFcYLMQffvePKKOmU2PQNTaprt0OXDcTuAwMaHiiYE8SPIj0r03aZ4CmxvTJam_Knb3Lu44LYzdUY4bYAhiaNRQQf9BMlk--6OhOHcoriAQe51FVc3HpGZta_tp5PsSO2YMGQCXGRDucnsxsC0QEbFQmkxOw
    type: object
    properties:
      googleId:
        type: string
    required:
    - googleId
  CreatesingletopicRequest:
    title: CreatesingletopicRequest
    example:
      name: Earth is flat?
      user: YbnviMIhh
      theme: non-tech
      description: blabla
      contact: '-'
      self_description: '-'
    type: object
    properties:
      name:
        type: string
      user:
        type: string
      theme:
        type: string
      description:
        type: string
      contact:
        type: string
      self_description:
        type: string
    required:
    - name
    - user
    - theme
    - description
    - contact
    - self_description
  CreatemultiplevotesRequest:
    title: CreatemultiplevotesRequest
    example:
      userId: YbnviMIhh
      topicId:
      - fopRqnuRz
      - fopRqnuRz
      - fopRqnuRz
      - fopRqnuRz
      - fopRqnuRz
      vote: speaker
    type: object
    properties:
      userId:
        type: string
      topicId:
        type: array
        items:
          type: string
      vote:
        type: string
    required:
    - userId
    - topicId
    - vote
tags:
- name: Auth
  description: ''
- name: Users
  description: ''
- name: Topics
  description: ''
- name: Votes
  description: ''
